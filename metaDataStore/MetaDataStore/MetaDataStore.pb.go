// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MetaDataStore/MetaDataStore.proto

package MetaDataStore

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Statuscode int32

const (
	Statuscode_unknown Statuscode = 0
	Statuscode_ok      Statuscode = 1
	Statuscode_failed  Statuscode = 2
)

var Statuscode_name = map[int32]string{
	0: "unknown",
	1: "ok",
	2: "failed",
}
var Statuscode_value = map[string]int32{
	"unknown": 0,
	"ok":      1,
	"failed":  2,
}

func (x Statuscode) String() string {
	return proto.EnumName(Statuscode_name, int32(x))
}
func (Statuscode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_MetaDataStore_bfe05f75747a00ae, []int{0}
}

type MetadataType int32

const (
	MetadataType_ALLTYPE MetadataType = 0
	MetadataType_type1   MetadataType = 1
	MetadataType_type2   MetadataType = 2
	MetadataType_type3   MetadataType = 3
)

var MetadataType_name = map[int32]string{
	0: "ALLTYPE",
	1: "type1",
	2: "type2",
	3: "type3",
}
var MetadataType_value = map[string]int32{
	"ALLTYPE": 0,
	"type1":   1,
	"type2":   2,
	"type3":   3,
}

func (x MetadataType) String() string {
	return proto.EnumName(MetadataType_name, int32(x))
}
func (MetadataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_MetaDataStore_bfe05f75747a00ae, []int{1}
}

type MetadataSubType int32

const (
	MetadataSubType_ALLSUBTYPE MetadataSubType = 0
	MetadataSubType_subtype1   MetadataSubType = 1
	MetadataSubType_subtype2   MetadataSubType = 2
	MetadataSubType_subtype3   MetadataSubType = 3
)

var MetadataSubType_name = map[int32]string{
	0: "ALLSUBTYPE",
	1: "subtype1",
	2: "subtype2",
	3: "subtype3",
}
var MetadataSubType_value = map[string]int32{
	"ALLSUBTYPE": 0,
	"subtype1":   1,
	"subtype2":   2,
	"subtype3":   3,
}

func (x MetadataSubType) String() string {
	return proto.EnumName(MetadataSubType_name, int32(x))
}
func (MetadataSubType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_MetaDataStore_bfe05f75747a00ae, []int{2}
}

// it will create the metadata file sent in this request
type UploadRequest struct {
	MetadataInfo         *MetaDataInfo `protobuf:"bytes,1,opt,name=metadata_info,json=metadataInfo,proto3" json:"metadata_info,omitempty"`
	MetadataTar          []byte        `protobuf:"bytes,2,opt,name=metadata_tar,json=metadataTar,proto3" json:"metadata_tar,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UploadRequest) Reset()         { *m = UploadRequest{} }
func (m *UploadRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()    {}
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_MetaDataStore_bfe05f75747a00ae, []int{0}
}
func (m *UploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRequest.Unmarshal(m, b)
}
func (m *UploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRequest.Marshal(b, m, deterministic)
}
func (dst *UploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRequest.Merge(dst, src)
}
func (m *UploadRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRequest.Size(m)
}
func (m *UploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRequest proto.InternalMessageInfo

func (m *UploadRequest) GetMetadataInfo() *MetaDataInfo {
	if m != nil {
		return m.MetadataInfo
	}
	return nil
}

func (m *UploadRequest) GetMetadataTar() []byte {
	if m != nil {
		return m.MetadataTar
	}
	return nil
}

type UploadResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadResponse) Reset()         { *m = UploadResponse{} }
func (m *UploadResponse) String() string { return proto.CompactTextString(m) }
func (*UploadResponse) ProtoMessage()    {}
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_MetaDataStore_bfe05f75747a00ae, []int{1}
}
func (m *UploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadResponse.Unmarshal(m, b)
}
func (m *UploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadResponse.Marshal(b, m, deterministic)
}
func (dst *UploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadResponse.Merge(dst, src)
}
func (m *UploadResponse) XXX_Size() int {
	return xxx_messageInfo_UploadResponse.Size(m)
}
func (m *UploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadResponse proto.InternalMessageInfo

func (m *UploadResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

// this will read the metadata for perticular vnf type and returns metadata tar file
type DownloadRequest struct {
	MetadataInfo         *MetaDataInfo `protobuf:"bytes,1,opt,name=metadata_info,json=metadataInfo,proto3" json:"metadata_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DownloadRequest) Reset()         { *m = DownloadRequest{} }
func (m *DownloadRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadRequest) ProtoMessage()    {}
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_MetaDataStore_bfe05f75747a00ae, []int{2}
}
func (m *DownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadRequest.Unmarshal(m, b)
}
func (m *DownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadRequest.Marshal(b, m, deterministic)
}
func (dst *DownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadRequest.Merge(dst, src)
}
func (m *DownloadRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadRequest.Size(m)
}
func (m *DownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadRequest proto.InternalMessageInfo

func (m *DownloadRequest) GetMetadataInfo() *MetaDataInfo {
	if m != nil {
		return m.MetadataInfo
	}
	return nil
}

// response with metadata
type DownloadResponse struct {
	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// metadata zip file
	MetadataTar          []byte   `protobuf:"bytes,2,opt,name=metadata_tar,json=metadataTar,proto3" json:"metadata_tar,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadResponse) Reset()         { *m = DownloadResponse{} }
func (m *DownloadResponse) String() string { return proto.CompactTextString(m) }
func (*DownloadResponse) ProtoMessage()    {}
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_MetaDataStore_bfe05f75747a00ae, []int{3}
}
func (m *DownloadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadResponse.Unmarshal(m, b)
}
func (m *DownloadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadResponse.Marshal(b, m, deterministic)
}
func (dst *DownloadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadResponse.Merge(dst, src)
}
func (m *DownloadResponse) XXX_Size() int {
	return xxx_messageInfo_DownloadResponse.Size(m)
}
func (m *DownloadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadResponse proto.InternalMessageInfo

func (m *DownloadResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DownloadResponse) GetMetadataTar() []byte {
	if m != nil {
		return m.MetadataTar
	}
	return nil
}

// to delete the existing metadata stored in the ztsl
type DeleteRequest struct {
	//
	MetadataInfo         *MetaDataInfo `protobuf:"bytes,1,opt,name=metadata_info,json=metadataInfo,proto3" json:"metadata_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_MetaDataStore_bfe05f75747a00ae, []int{4}
}
func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(dst, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetMetadataInfo() *MetaDataInfo {
	if m != nil {
		return m.MetadataInfo
	}
	return nil
}

// delete response with the status
type DeleteResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_MetaDataStore_bfe05f75747a00ae, []int{5}
}
func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(dst, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type Status struct {
	DetailedErrorResponse string     `protobuf:"bytes,1,opt,name=DetailedErrorResponse,proto3" json:"DetailedErrorResponse,omitempty"`
	Statuscode            Statuscode `protobuf:"varint,2,opt,name=statuscode,proto3,enum=MetaDataStore.Statuscode" json:"statuscode,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}   `json:"-"`
	XXX_unrecognized      []byte     `json:"-"`
	XXX_sizecache         int32      `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_MetaDataStore_bfe05f75747a00ae, []int{6}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (dst *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(dst, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetDetailedErrorResponse() string {
	if m != nil {
		return m.DetailedErrorResponse
	}
	return ""
}

func (m *Status) GetStatuscode() Statuscode {
	if m != nil {
		return m.Statuscode
	}
	return Statuscode_unknown
}

type MetaDataInfo struct {
	// sourcetype
	SourceType string `protobuf:"bytes,1,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	// vnf version example: major/9.0 | minorr/0.1
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// type of metadata example : type1
	MetadataType MetadataType `protobuf:"varint,3,opt,name=metadata_type,json=metadataType,proto3,enum=MetaDataStore.MetadataType" json:"metadata_type,omitempty"`
	// type of metadata example : ALL
	MetadataSubtype      MetadataSubType `protobuf:"varint,4,opt,name=metadata_subtype,json=metadataSubtype,proto3,enum=MetaDataStore.MetadataSubType" json:"metadata_subtype,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MetaDataInfo) Reset()         { *m = MetaDataInfo{} }
func (m *MetaDataInfo) String() string { return proto.CompactTextString(m) }
func (*MetaDataInfo) ProtoMessage()    {}
func (*MetaDataInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_MetaDataStore_bfe05f75747a00ae, []int{7}
}
func (m *MetaDataInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaDataInfo.Unmarshal(m, b)
}
func (m *MetaDataInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaDataInfo.Marshal(b, m, deterministic)
}
func (dst *MetaDataInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataInfo.Merge(dst, src)
}
func (m *MetaDataInfo) XXX_Size() int {
	return xxx_messageInfo_MetaDataInfo.Size(m)
}
func (m *MetaDataInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataInfo proto.InternalMessageInfo

func (m *MetaDataInfo) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *MetaDataInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *MetaDataInfo) GetMetadataType() MetadataType {
	if m != nil {
		return m.MetadataType
	}
	return MetadataType_ALLTYPE
}

func (m *MetaDataInfo) GetMetadataSubtype() MetadataSubType {
	if m != nil {
		return m.MetadataSubtype
	}
	return MetadataSubType_ALLSUBTYPE
}

func init() {
	proto.RegisterType((*UploadRequest)(nil), "MetaDataStore.UploadRequest")
	proto.RegisterType((*UploadResponse)(nil), "MetaDataStore.UploadResponse")
	proto.RegisterType((*DownloadRequest)(nil), "MetaDataStore.DownloadRequest")
	proto.RegisterType((*DownloadResponse)(nil), "MetaDataStore.DownloadResponse")
	proto.RegisterType((*DeleteRequest)(nil), "MetaDataStore.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "MetaDataStore.DeleteResponse")
	proto.RegisterType((*Status)(nil), "MetaDataStore.status")
	proto.RegisterType((*MetaDataInfo)(nil), "MetaDataStore.MetaDataInfo")
	proto.RegisterEnum("MetaDataStore.Statuscode", Statuscode_name, Statuscode_value)
	proto.RegisterEnum("MetaDataStore.MetadataType", MetadataType_name, MetadataType_value)
	proto.RegisterEnum("MetaDataStore.MetadataSubType", MetadataSubType_name, MetadataSubType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetaDataStoreClient is the client API for MetaDataStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetaDataStoreClient interface {
	// create or update the metadata tar file
	Upload(ctx context.Context, opts ...grpc.CallOption) (MetaDataStore_UploadClient, error)
	// read the metadata tar files
	Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (MetaDataStore_DownloadClient, error)
	// delete the metadata tar files
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
}

type metaDataStoreClient struct {
	cc *grpc.ClientConn
}

func NewMetaDataStoreClient(cc *grpc.ClientConn) MetaDataStoreClient {
	return &metaDataStoreClient{cc}
}

func (c *metaDataStoreClient) Upload(ctx context.Context, opts ...grpc.CallOption) (MetaDataStore_UploadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MetaDataStore_serviceDesc.Streams[0], "/MetaDataStore.MetaDataStore/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &metaDataStoreUploadClient{stream}
	return x, nil
}

type MetaDataStore_UploadClient interface {
	Send(*UploadRequest) error
	CloseAndRecv() (*UploadResponse, error)
	grpc.ClientStream
}

type metaDataStoreUploadClient struct {
	grpc.ClientStream
}

func (x *metaDataStoreUploadClient) Send(m *UploadRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *metaDataStoreUploadClient) CloseAndRecv() (*UploadResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *metaDataStoreClient) Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (MetaDataStore_DownloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MetaDataStore_serviceDesc.Streams[1], "/MetaDataStore.MetaDataStore/Download", opts...)
	if err != nil {
		return nil, err
	}
	x := &metaDataStoreDownloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MetaDataStore_DownloadClient interface {
	Recv() (*DownloadResponse, error)
	grpc.ClientStream
}

type metaDataStoreDownloadClient struct {
	grpc.ClientStream
}

func (x *metaDataStoreDownloadClient) Recv() (*DownloadResponse, error) {
	m := new(DownloadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *metaDataStoreClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/MetaDataStore.MetaDataStore/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetaDataStoreServer is the server API for MetaDataStore service.
type MetaDataStoreServer interface {
	// create or update the metadata tar file
	Upload(MetaDataStore_UploadServer) error
	// read the metadata tar files
	Download(*DownloadRequest, MetaDataStore_DownloadServer) error
	// delete the metadata tar files
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
}

func RegisterMetaDataStoreServer(s *grpc.Server, srv MetaDataStoreServer) {
	s.RegisterService(&_MetaDataStore_serviceDesc, srv)
}

func _MetaDataStore_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MetaDataStoreServer).Upload(&metaDataStoreUploadServer{stream})
}

type MetaDataStore_UploadServer interface {
	SendAndClose(*UploadResponse) error
	Recv() (*UploadRequest, error)
	grpc.ServerStream
}

type metaDataStoreUploadServer struct {
	grpc.ServerStream
}

func (x *metaDataStoreUploadServer) SendAndClose(m *UploadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *metaDataStoreUploadServer) Recv() (*UploadRequest, error) {
	m := new(UploadRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _MetaDataStore_Download_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MetaDataStoreServer).Download(m, &metaDataStoreDownloadServer{stream})
}

type MetaDataStore_DownloadServer interface {
	Send(*DownloadResponse) error
	grpc.ServerStream
}

type metaDataStoreDownloadServer struct {
	grpc.ServerStream
}

func (x *metaDataStoreDownloadServer) Send(m *DownloadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MetaDataStore_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaDataStoreServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/MetaDataStore.MetaDataStore/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaDataStoreServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetaDataStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MetaDataStore.MetaDataStore",
	HandlerType: (*MetaDataStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Delete",
			Handler:    _MetaDataStore_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Upload",
			Handler:       _MetaDataStore_Upload_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Download",
			Handler:       _MetaDataStore_Download_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "MetaDataStore/MetaDataStore.proto",
}

func init() {
	proto.RegisterFile("MetaDataStore/MetaDataStore.proto", fileDescriptor_MetaDataStore_bfe05f75747a00ae)
}

var fileDescriptor_MetaDataStore_bfe05f75747a00ae = []byte{
	// 509 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xdd, 0x6e, 0xda, 0x30,
	0x14, 0xc7, 0x31, 0x6c, 0xa1, 0x1c, 0xbe, 0xac, 0x23, 0x55, 0x62, 0xdd, 0x47, 0xdb, 0x5c, 0x21,
	0xa4, 0x76, 0x1b, 0xec, 0x66, 0xd2, 0xa4, 0xae, 0x15, 0xd5, 0x84, 0xc6, 0xb4, 0x2d, 0xd0, 0x8b,
	0xed, 0x06, 0x99, 0xc6, 0x48, 0xa8, 0x34, 0xce, 0x1c, 0x67, 0x15, 0x2f, 0xba, 0x27, 0xd9, 0x03,
	0x4c, 0x71, 0x30, 0xc1, 0x29, 0x48, 0x53, 0xd5, 0xbb, 0x1c, 0xdb, 0xe7, 0x77, 0xfe, 0xe7, 0x1f,
	0x1f, 0xc3, 0xf1, 0x17, 0xae, 0x58, 0x9f, 0x29, 0x36, 0x52, 0x42, 0xf2, 0xd7, 0x56, 0x74, 0x1a,
	0x4a, 0xa1, 0x04, 0xd6, 0xad, 0x45, 0x57, 0x41, 0xfd, 0x2a, 0x5c, 0x08, 0xe6, 0x7b, 0xfc, 0x57,
	0xcc, 0x23, 0x85, 0x1f, 0xa1, 0x7e, 0xcb, 0x15, 0xf3, 0x99, 0x62, 0x93, 0x79, 0x30, 0x13, 0x2d,
	0x72, 0x44, 0xda, 0xd5, 0xee, 0xf3, 0x53, 0x1b, 0x66, 0xa2, 0x41, 0x30, 0x13, 0x5e, 0xcd, 0x64,
	0x24, 0x11, 0x1e, 0xc3, 0x3a, 0x9e, 0x28, 0x26, 0x5b, 0xc5, 0x23, 0xd2, 0xae, 0x79, 0x55, 0xb3,
	0x36, 0x66, 0xd2, 0x3d, 0x83, 0x86, 0xa9, 0x1a, 0x85, 0x22, 0x88, 0x38, 0x9e, 0x80, 0x13, 0x29,
	0xa6, 0xe2, 0x68, 0x55, 0x6f, 0x3f, 0x57, 0x2f, 0xdd, 0xf4, 0x56, 0x87, 0xdc, 0x11, 0x34, 0xfb,
	0xe2, 0x2e, 0x78, 0x54, 0xe1, 0xae, 0x0f, 0x34, 0x83, 0x3e, 0x48, 0xd7, 0xff, 0xf4, 0xfe, 0x1d,
	0xea, 0x7d, 0xbe, 0xe0, 0x8a, 0x3f, 0x9e, 0xf0, 0x33, 0x68, 0x18, 0xe4, 0xc3, 0xec, 0x5c, 0x9a,
	0xe3, 0xf8, 0x0e, 0xf6, 0xfb, 0x5c, 0xb1, 0xf9, 0x82, 0xfb, 0x97, 0x52, 0x0a, 0x69, 0x88, 0x9a,
	0x53, 0xf1, 0xb6, 0x6f, 0xe2, 0x7b, 0x80, 0x34, 0xff, 0x5a, 0xf8, 0x5c, 0x37, 0xdd, 0xe8, 0x3e,
	0xdb, 0x5a, 0x32, 0x39, 0xe0, 0x6d, 0x1c, 0x76, 0xff, 0x10, 0xa8, 0x6d, 0xb6, 0x86, 0x87, 0x50,
	0x8d, 0x44, 0x2c, 0xaf, 0xf9, 0x44, 0x2d, 0x43, 0x53, 0x17, 0xd2, 0xa5, 0xf1, 0x32, 0xe4, 0xd8,
	0x82, 0xf2, 0x6f, 0x2e, 0xa3, 0xb9, 0x08, 0x74, 0xa5, 0x8a, 0x67, 0x42, 0xcb, 0x49, 0x9d, 0x5c,
	0xd2, 0x4a, 0xb6, 0x39, 0xa9, 0xff, 0xc6, 0x32, 0xe4, 0x99, 0x93, 0x9a, 0x3d, 0x00, 0xba, 0x26,
	0x44, 0xf1, 0x54, 0x43, 0x9e, 0x68, 0xc8, 0xab, 0x1d, 0x90, 0x51, 0x3c, 0xd5, 0x9c, 0xe6, 0x6d,
	0xb6, 0x90, 0xa4, 0x75, 0x4e, 0x36, 0x3d, 0xc1, 0x2a, 0x94, 0xe3, 0xe0, 0x26, 0x10, 0x77, 0x01,
	0x2d, 0xa0, 0x03, 0x45, 0x71, 0x43, 0x09, 0x02, 0x38, 0x33, 0xed, 0x26, 0x2d, 0x76, 0x3e, 0xa4,
	0x36, 0xac, 0x95, 0x54, 0xa1, 0x7c, 0x3e, 0x1c, 0x8e, 0x7f, 0x7c, 0xbb, 0xa4, 0x05, 0xac, 0xc0,
	0xd3, 0x84, 0xf9, 0x96, 0x12, 0xf3, 0xd9, 0xa5, 0x45, 0xf3, 0xd9, 0xa3, 0xa5, 0xce, 0x67, 0x68,
	0xe6, 0x04, 0x61, 0x03, 0xe0, 0x7c, 0x38, 0x1c, 0x5d, 0x5d, 0xac, 0x18, 0x35, 0xd8, 0x5b, 0x75,
	0x94, 0x60, 0xb2, 0x28, 0x21, 0x65, 0x51, 0x8f, 0x96, 0xba, 0x7f, 0x09, 0xd8, 0xaf, 0x04, 0x0e,
	0xc0, 0x49, 0xe7, 0x15, 0x5f, 0xe4, 0x6c, 0xb0, 0x1e, 0x8f, 0x83, 0x97, 0x3b, 0x76, 0xd3, 0x6b,
	0xe2, 0x16, 0xda, 0x04, 0xbf, 0xc2, 0x9e, 0x19, 0x32, 0xcc, 0x7b, 0x9a, 0x1b, 0xe9, 0x83, 0xc3,
	0x9d, 0xfb, 0x06, 0xf8, 0x86, 0xe0, 0x27, 0x70, 0xd2, 0xcb, 0x7f, 0x4f, 0x9b, 0x35, 0x66, 0xf7,
	0xb4, 0xd9, 0x13, 0xe3, 0x16, 0x2e, 0x9a, 0x3f, 0xed, 0xae, 0xa7, 0x8e, 0x7e, 0x31, 0x7b, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xbf, 0xa3, 0xfd, 0x39, 0x56, 0x05, 0x00, 0x00,
}
